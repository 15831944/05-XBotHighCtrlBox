<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\OBJ\XbotUpCtrlBoxV1.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\OBJ\XbotUpCtrlBoxV1.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 524]: Last Updated: Tue Jul 17 15:53:24 2012
<BR><P>
<H3>Maximum Stack Usage =        124 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; Adc1Dma_Init &rArr; STM32_GpioOneInit &rArr; GPIO_Init
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[16af488]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[16af104]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16af104]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[16af35c]">Reset_Handler</a>
 <LI><a href="#[c325e4]">NMI_Handler</a>
 <LI><a href="#[c325a8]">HardFault_Handler</a>
 <LI><a href="#[c3256c]">MemManage_Handler</a>
 <LI><a href="#[c32530]">BusFault_Handler</a>
 <LI><a href="#[c324f4]">UsageFault_Handler</a>
 <LI><a href="#[c324b8]">SVC_Handler</a>
 <LI><a href="#[c3247c]">DebugMon_Handler</a>
 <LI><a href="#[c32440]">PendSV_Handler</a>
 <LI><a href="#[c32404]">SysTick_Handler</a>
 <LI><a href="#[16ae330]">WWDG_IRQHandler</a>
 <LI><a href="#[16aea74]">PVD_IRQHandler</a>
 <LI><a href="#[16ae894]">TAMPER_IRQHandler</a>
 <LI><a href="#[16ae9c0]">RTC_IRQHandler</a>
 <LI><a href="#[16aebdc]">FLASH_IRQHandler</a>
 <LI><a href="#[16aea38]">RCC_IRQHandler</a>
 <LI><a href="#[16aed80]">EXTI0_IRQHandler</a>
 <LI><a href="#[16aed08]">EXTI1_IRQHandler</a>
 <LI><a href="#[16aeccc]">EXTI2_IRQHandler</a>
 <LI><a href="#[16aec90]">EXTI3_IRQHandler</a>
 <LI><a href="#[16aec54]">EXTI4_IRQHandler</a>
 <LI><a href="#[16af014]">DMA1_Channel1_IRQHandler</a>
 <LI><a href="#[16aefd8]">DMA1_Channel2_IRQHandler</a>
 <LI><a href="#[16aef9c]">DMA1_Channel3_IRQHandler</a>
 <LI><a href="#[16aef60]">DMA1_Channel4_IRQHandler</a>
 <LI><a href="#[16aef24]">DMA1_Channel5_IRQHandler</a>
 <LI><a href="#[16aeee8]">DMA1_Channel6_IRQHandler</a>
 <LI><a href="#[16aeeac]">DMA1_Channel7_IRQHandler</a>
 <LI><a href="#[16af104]">ADC1_2_IRQHandler</a>
 <LI><a href="#[16ae3a8]">USB_HP_CAN1_TX_IRQHandler</a>
 <LI><a href="#[16ae36c]">USB_LP_CAN1_RX0_IRQHandler</a>
 <LI><a href="#[16af08c]">CAN1_RX1_IRQHandler</a>
 <LI><a href="#[16af050]">CAN1_SCE_IRQHandler</a>
 <LI><a href="#[16aec18]">EXTI9_5_IRQHandler</a>
 <LI><a href="#[16ae858]">TIM1_BRK_IRQHandler</a>
 <LI><a href="#[16ae7a4]">TIM1_UP_IRQHandler</a>
 <LI><a href="#[16ae7e0]">TIM1_TRG_COM_IRQHandler</a>
 <LI><a href="#[16ae81c]">TIM1_CC_IRQHandler</a>
 <LI><a href="#[c31cfc]">TIM2_IRQHandler</a>
 <LI><a href="#[c31cc0]">TIM3_IRQHandler</a>
 <LI><a href="#[c31c84]">TIM4_IRQHandler</a>
 <LI><a href="#[16aeb28]">I2C1_EV_IRQHandler</a>
 <LI><a href="#[16aeb64]">I2C1_ER_IRQHandler</a>
 <LI><a href="#[16aeab0]">I2C2_EV_IRQHandler</a>
 <LI><a href="#[16aeaec]">I2C2_ER_IRQHandler</a>
 <LI><a href="#[16ae948]">SPI1_IRQHandler</a>
 <LI><a href="#[16ae90c]">SPI2_IRQHandler</a>
 <LI><a href="#[c2d058]">USART1_IRQHandler</a>
 <LI><a href="#[c2d01c]">USART2_IRQHandler</a>
 <LI><a href="#[c2cfe0]">USART3_IRQHandler</a>
 <LI><a href="#[16aed44]">EXTI15_10_IRQHandler</a>
 <LI><a href="#[16ae9fc]">RTCAlarm_IRQHandler</a>
 <LI><a href="#[16ae3e4]">USBWakeUp_IRQHandler</a>
 <LI><a href="#[16ae600]">TIM8_BRK_IRQHandler</a>
 <LI><a href="#[16ae54c]">TIM8_UP_IRQHandler</a>
 <LI><a href="#[16ae588]">TIM8_TRG_COM_IRQHandler</a>
 <LI><a href="#[16ae5c4]">TIM8_CC_IRQHandler</a>
 <LI><a href="#[16af0c8]">ADC3_IRQHandler</a>
 <LI><a href="#[16aeba0]">FSMC_IRQHandler</a>
 <LI><a href="#[16ae984]">SDIO_IRQHandler</a>
 <LI><a href="#[16ae6b4]">TIM5_IRQHandler</a>
 <LI><a href="#[16ae8d0]">SPI3_IRQHandler</a>
 <LI><a href="#[c2cfa4]">UART4_IRQHandler</a>
 <LI><a href="#[c2cf68]">UART5_IRQHandler</a>
 <LI><a href="#[16ae678]">TIM6_IRQHandler</a>
 <LI><a href="#[16ae63c]">TIM7_IRQHandler</a>
 <LI><a href="#[16aee70]">DMA2_Channel1_IRQHandler</a>
 <LI><a href="#[16aee34]">DMA2_Channel2_IRQHandler</a>
 <LI><a href="#[16aedf8]">DMA2_Channel3_IRQHandler</a>
 <LI><a href="#[16aedbc]">DMA2_Channel4_5_IRQHandler</a>
 <LI><a href="#[c33bb0]">SystemInit</a>
 <LI><a href="#[16ac47c]">__main</a>
 <LI><a href="#[16a8084]">__I$use$semihosting</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[16ac47c]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[16a4574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[16ac260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[16a4574]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[16ac47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[16a4538]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16ac260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[16a44fc]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[16a44c0]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[16a431c]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16a431c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[16a431c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[16a422c]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[16a72ec]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[16a8ffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[16aa4d8]"></a>__rt_lib_init_heap_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_heap_2 &rArr; _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[16abb58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[16a9bf0]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[16a9c68]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000028))

<P><STRONG><a name="[16aa028]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[16a9ec0]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[16a9b00]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[16a9b78]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[16a9f38]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[16a9e48]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[16aa424]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[16aa280]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))

<P><STRONG><a name="[16aa208]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[16aa190]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[16aa118]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[16aa0a0]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[16aa334]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[16a9ac4]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002F))

<P><STRONG><a name="[16a9fb0]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[16a9dd0]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[16aa3ac]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[16a48bc]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[16a5b04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[16a6248]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[16a6068]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[16a602c]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[16a6194]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[16a62fc]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[16a611c]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[16ac260]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[16a4538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[16ac47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[16a90b0]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[16a8d2c]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[16a7f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[16a8ffc]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[16a72ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[16a9038]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[16a8f48]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 124 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; Adc1Dma_Init &rArr; STM32_GpioOneInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c3409c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[16a7b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[16a8f84]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[16a6c98]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[16a7b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[16a5b04]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[16a48bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[16a5b40]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[16a5ac8]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[16a6d4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[16a8a98]"></a>_maybe_terminate_alloc</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, maybetermalloc1.o(.emb_text), UNUSED)

<P><STRONG><a name="[c3409c]"></a>main</STRONG> (Thumb, 158 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = main &rArr; Adc1Dma_Init &rArr; STM32_GpioOneInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c33b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[c33bb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[c33bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
<LI><a href="#[c33c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Delay
<LI><a href="#[c33c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_Tim4Init
<LI><a href="#[c33ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_Tim3Init
<LI><a href="#[c33cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_Tim2Init
<LI><a href="#[c33d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart4
<LI><a href="#[c33d54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart3
<LI><a href="#[c33d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart2
<LI><a href="#[c33dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart1
<LI><a href="#[c33e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_GpioInit
<LI><a href="#[c33e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PCLK2Config
<LI><a href="#[c33e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PCLK1Config
<LI><a href="#[c33ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[c33ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[c33f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedDisp_Init
<LI><a href="#[c33f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyRead_Init
<LI><a href="#[c33fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JoyStickAdcReadInit
<LI><a href="#[c33fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[c34024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[c34060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc1Dma_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[16a8f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[c325e4]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c325a8]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c3256c]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c32530]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c324f4]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c324b8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c3247c]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c32440]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c32404]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[c323c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_TimingDelay_Decrement
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c31cfc]"></a>TIM2_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, stm32_irq_fun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TIM2_IRQHandler &rArr; CbDealRxdCtrl &rArr; CbCtrlDealRcOmapData
</UL>
<BR>[Calls]<UL><LI><a href="#[c31b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[c31b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[c31c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CbDealRxdCtrl
<LI><a href="#[c33b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c31cc0]"></a>TIM3_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, stm32_irq_fun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIM3_IRQHandler &rArr; KeyAll_OpTask &rArr; KeyOnePress_OpTask
</UL>
<BR>[Calls]<UL><LI><a href="#[c31b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[c31b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[c31bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyAll_OpTask
<LI><a href="#[c33b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c31c84]"></a>TIM4_IRQHandler</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, stm32_irq_fun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = TIM4_IRQHandler &rArr; CbDealTxdCtrl &rArr; AdcToOmapData &rArr; BAT2_GetValue &rArr; GetAdcAverageValue
</UL>
<BR>[Calls]<UL><LI><a href="#[c31b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[c31b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[c31c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CbDealTxdCtrl
<LI><a href="#[c33b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c315f4]"></a>BAT1_GetValue</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, batteryadcread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = BAT1_GetValue &rArr; GetAdcAverageValue
</UL>
<BR>[Calls]<UL><LI><a href="#[c31540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAdcAverageValue
</UL>
<BR>[Called By]<UL><LI><a href="#[c30280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcToOmapData
</UL>

<P><STRONG><a name="[c315b8]"></a>BAT2_GetValue</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, batteryadcread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = BAT2_GetValue &rArr; GetAdcAverageValue
</UL>
<BR>[Calls]<UL><LI><a href="#[c31540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAdcAverageValue
</UL>
<BR>[Called By]<UL><LI><a href="#[c30280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcToOmapData
</UL>

<P><STRONG><a name="[c33fac]"></a>JoyStickAdcReadInit</STRONG> (Thumb, 296 bytes, Stack size 24 bytes, joystickadcread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = JoyStickAdcReadInit &rArr; GetAdcAverageValue
</UL>
<BR>[Calls]<UL><LI><a href="#[c31540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAdcAverageValue
<LI><a href="#[c33c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[c3409c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c30d48]"></a>JK_GetValue</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, joystickadcread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = JK_GetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[c30280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcToOmapData
</UL>

<P><STRONG><a name="[c307e4]"></a>KeyOneInit</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, keyread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = KeyOneInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c3076c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c33f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyRead_Init
</UL>

<P><STRONG><a name="[c33f70]"></a>KeyRead_Init</STRONG> (Thumb, 1188 bytes, Stack size 8 bytes, keyread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = KeyRead_Init &rArr; KeyOneInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c307e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyOneInit
<LI><a href="#[c33ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[c3409c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c307a8]"></a>KeyOnePress_OpTask</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, keyread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = KeyOnePress_OpTask
</UL>
<BR>[Calls]<UL><LI><a href="#[c30730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[c31bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyAll_OpTask
</UL>

<P><STRONG><a name="[c31bd0]"></a>KeyAll_OpTask</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, keyread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = KeyAll_OpTask &rArr; KeyOnePress_OpTask
</UL>
<BR>[Calls]<UL><LI><a href="#[c307a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyOnePress_OpTask
</UL>
<BR>[Called By]<UL><LI><a href="#[c31cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[c2f8e4]"></a>CbCtrlInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cbctrl.o(.text), UNUSED)

<P><STRONG><a name="[c31c0c]"></a>CbDealTxdCtrl</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, cbctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = CbDealTxdCtrl &rArr; AdcToOmapData &rArr; BAT2_GetValue &rArr; GetAdcAverageValue
</UL>
<BR>[Calls]<UL><LI><a href="#[c2f6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_TXBuffer_PutByte
<LI><a href="#[c300dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyToOmapData
<LI><a href="#[c30280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcToOmapData
</UL>
<BR>[Called By]<UL><LI><a href="#[c31c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[c2f8a8]"></a>XbotRxdDataSetOmapTxdData</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, cbctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = XbotRxdDataSetOmapTxdData
</UL>
<BR>[Called By]<UL><LI><a href="#[c31c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CbDealRxdCtrl
</UL>

<P><STRONG><a name="[c2f86c]"></a>CbCtrlDealRcXbotData</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, cbctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CbCtrlDealRcXbotData
</UL>
<BR>[Calls]<UL><LI><a href="#[c2f704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_RXBuffer_GetByte
<LI><a href="#[c2f740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_RXBufferData_Available
</UL>
<BR>[Called By]<UL><LI><a href="#[c31c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CbDealRxdCtrl
</UL>

<P><STRONG><a name="[c2f830]"></a>OmapRxdDataSetXbotTxdData</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, cbctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OmapRxdDataSetXbotTxdData
</UL>
<BR>[Called By]<UL><LI><a href="#[c31c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CbDealRxdCtrl
</UL>

<P><STRONG><a name="[c2f7f4]"></a>CbCtrlDealRcOmapData</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, cbctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CbCtrlDealRcOmapData
</UL>
<BR>[Calls]<UL><LI><a href="#[c2f704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_RXBuffer_GetByte
<LI><a href="#[c2f740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_RXBufferData_Available
</UL>
<BR>[Called By]<UL><LI><a href="#[c31c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CbDealRxdCtrl
</UL>

<P><STRONG><a name="[c31c48]"></a>CbDealRxdCtrl</STRONG> (Thumb, 228 bytes, Stack size 8 bytes, cbctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CbDealRxdCtrl &rArr; CbCtrlDealRcOmapData
</UL>
<BR>[Calls]<UL><LI><a href="#[c2f6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_TXBuffer_PutByte
<LI><a href="#[c2f7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CbCtrlDealRcOmapData
<LI><a href="#[c2f830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OmapRxdDataSetXbotTxdData
<LI><a href="#[c2f86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CbCtrlDealRcXbotData
<LI><a href="#[c2f8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XbotRxdDataSetOmapTxdData
</UL>
<BR>[Called By]<UL><LI><a href="#[c31cfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[c2f7b8]"></a>OmapRxdDataSetCbOtherCtrl</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cbctrl.o(.text), UNUSED)

<P><STRONG><a name="[c2f77c]"></a>receiveData</STRONG> (Thumb, 290 bytes, Stack size 24 bytes, cbctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c2f614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;creatChain
<LI><a href="#[c2f704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_RXBuffer_GetByte
<LI><a href="#[c2f740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_RXBufferData_Available
</UL>

<P><STRONG><a name="[c2efc0]"></a>insertAfter</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, chain.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16add90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[c2ef84]"></a>insertBefore</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, chain.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16add90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[c2ef48]"></a>deleteAfter</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, chain.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16adc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>

<P><STRONG><a name="[c2ef0c]"></a>deleteBefore</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, chain.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16adc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>

<P><STRONG><a name="[c2eed0]"></a>deletSelf</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, chain.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16adc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>

<P><STRONG><a name="[c2f614]"></a>creatChain</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, chain.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16add90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[c2f77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receiveData
</UL>

<P><STRONG><a name="[c2ee94]"></a>deleteChain</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, chain.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16adc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>

<P><STRONG><a name="[c34060]"></a>Adc1Dma_Init</STRONG> (Thumb, 372 bytes, Stack size 72 bytes, stm32_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = Adc1Dma_Init &rArr; STM32_GpioOneInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c2e5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_GpioOneInit
<LI><a href="#[c2e5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[c2e624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ADCCLKConfig
<LI><a href="#[c2e660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[c2e69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[c2e6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[c2e714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartCalibration
<LI><a href="#[c2e750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SoftwareStartConvCmd
<LI><a href="#[c2e78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ResetCalibration
<LI><a href="#[c2e7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularChannelConfig
<LI><a href="#[c2e804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[c2e840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetResetCalibrationStatus
<LI><a href="#[c2e87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetCalibrationStatus
<LI><a href="#[c2e8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMACmd
<LI><a href="#[c2e8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[c33ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[c3409c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c31540]"></a>GetAdcAverageValue</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, stm32_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GetAdcAverageValue
</UL>
<BR>[Called By]<UL><LI><a href="#[c30280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcToOmapData
<LI><a href="#[c315b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT2_GetValue
<LI><a href="#[c315f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT1_GetValue
<LI><a href="#[c33fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JoyStickAdcReadInit
</UL>

<P><STRONG><a name="[c33f34]"></a>LedDisp_Init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32_leddisp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = LedDisp_Init &rArr; STM32_GpioOneInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c2e5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_GpioOneInit
<LI><a href="#[c33ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[c3409c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c33bec]"></a>SysTick_Init</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, stm32_systick.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3409c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c33c28]"></a>SysTick_Delay</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32_systick.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c33fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JoyStickAdcReadInit
<LI><a href="#[c3409c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c323c8]"></a>SysTick_TimingDelay_Decrement</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32_systick.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c32404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[c2dcc4]"></a>SysTick_DelayUs</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32_systick.o(.text), UNUSED)

<P><STRONG><a name="[c2dc88]"></a>SysTick_DelayMs</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32_systick.o(.text), UNUSED)

<P><STRONG><a name="[c2d8c8]"></a>USART_InterruptDriver_Initialize</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32_usartdriver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c2d094]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart5
<LI><a href="#[c33d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart4
<LI><a href="#[c33d54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart3
<LI><a href="#[c33d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart2
<LI><a href="#[c33dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart1
</UL>

<P><STRONG><a name="[c2d88c]"></a>USART_TXBuffer_FreeSpace</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32_usartdriver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c2f6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_TXBuffer_PutByte
</UL>

<P><STRONG><a name="[c2d850]"></a>USART_TXBuffer_SendAll</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32_usartdriver.o(.text), UNUSED)

<P><STRONG><a name="[c2f6c8]"></a>USART_TXBuffer_PutByte</STRONG> (Thumb, 64 bytes, Stack size 28 bytes, stm32_usartdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = USART_TXBuffer_PutByte
</UL>
<BR>[Calls]<UL><LI><a href="#[c2d88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_TXBuffer_FreeSpace
</UL>
<BR>[Called By]<UL><LI><a href="#[c31c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CbDealTxdCtrl
<LI><a href="#[c31c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CbDealRxdCtrl
</UL>

<P><STRONG><a name="[c2f740]"></a>USART_RXBufferData_Available</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32_usartdriver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c2f77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receiveData
<LI><a href="#[c2f7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CbCtrlDealRcOmapData
<LI><a href="#[c2f86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CbCtrlDealRcXbotData
</UL>

<P><STRONG><a name="[c2f704]"></a>USART_RXBuffer_GetByte</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32_usartdriver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c2f77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receiveData
<LI><a href="#[c2f7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CbCtrlDealRcOmapData
<LI><a href="#[c2f86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CbCtrlDealRcXbotData
</UL>

<P><STRONG><a name="[c2d814]"></a>USART_RXComplete</STRONG> (Thumb, 50 bytes, Stack size 20 bytes, stm32_usartdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_RXComplete
</UL>
<BR>[Called By]<UL><LI><a href="#[c2cf68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
<LI><a href="#[c2cfa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[c2cfe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[c2d01c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[c2d058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[c2d7d8]"></a>USART_DataRegEmpty</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, stm32_usartdriver.o(.text), UNUSED)

<P><STRONG><a name="[c2d79c]"></a>USART1_DataRegEmpty</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32_usartdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART1_DataRegEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[c2d058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[c2d760]"></a>USART2_DataRegEmpty</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, stm32_usartdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART2_DataRegEmpty
</UL>
<BR>[Calls]<UL><LI><a href="#[c33fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[c2d01c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[c2d724]"></a>USART3_DataRegEmpty</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, stm32_usartdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART3_DataRegEmpty
</UL>
<BR>[Calls]<UL><LI><a href="#[c33fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[c2cfe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>

<P><STRONG><a name="[c2d6e8]"></a>USART4_DataRegEmpty</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, stm32_usartdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART4_DataRegEmpty
</UL>
<BR>[Calls]<UL><LI><a href="#[c33fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[c2cfa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
</UL>

<P><STRONG><a name="[c2d6ac]"></a>USART5_DataRegEmpty</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32_usartdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART5_DataRegEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[c2cf68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
</UL>

<P><STRONG><a name="[c2d10c]"></a>STM32_Usart_InitNVIC</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, stm32_usartinit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = STM32_Usart_InitNVIC &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c2cef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c2d094]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart5
<LI><a href="#[c33d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart4
<LI><a href="#[c33d54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart3
<LI><a href="#[c33d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart2
<LI><a href="#[c33dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart1
</UL>

<P><STRONG><a name="[c2d0d0]"></a>STM32_Usart_InitConfig</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, stm32_usartinit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = STM32_Usart_InitConfig &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[c2cd4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_StructInit
<LI><a href="#[c2cd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c2d094]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart5
<LI><a href="#[c33d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart4
<LI><a href="#[c33d54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart3
<LI><a href="#[c33d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart2
</UL>

<P><STRONG><a name="[c33dcc]"></a>STM32_InitUsart1</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, stm32_usartinit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = STM32_InitUsart1 &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[c2cd4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_StructInit
<LI><a href="#[c2cd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[c2cdc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[c2ce3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[c2cf2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinRemapConfig
<LI><a href="#[c2d10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_Usart_InitNVIC
<LI><a href="#[c2d8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_InterruptDriver_Initialize
<LI><a href="#[c2e5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_GpioOneInit
<LI><a href="#[c33ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[c3409c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c33d90]"></a>STM32_InitUsart2</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, stm32_usartinit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = STM32_InitUsart2 &rArr; STM32_Usart_InitConfig &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[c2cdc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[c2ce3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[c2ceb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[c2cf2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinRemapConfig
<LI><a href="#[c2d0d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_Usart_InitConfig
<LI><a href="#[c2d10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_Usart_InitNVIC
<LI><a href="#[c2d8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_InterruptDriver_Initialize
<LI><a href="#[c2e5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_GpioOneInit
<LI><a href="#[c33ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[c3409c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c33d54]"></a>STM32_InitUsart3</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, stm32_usartinit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = STM32_InitUsart3 &rArr; STM32_Usart_InitConfig &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[c2cdc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[c2ce3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[c2ceb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[c2cf2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinRemapConfig
<LI><a href="#[c2d0d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_Usart_InitConfig
<LI><a href="#[c2d10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_Usart_InitNVIC
<LI><a href="#[c2d8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_InterruptDriver_Initialize
<LI><a href="#[c2e5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_GpioOneInit
<LI><a href="#[c33ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[c3409c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c33d18]"></a>STM32_InitUsart4</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, stm32_usartinit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = STM32_InitUsart4 &rArr; STM32_Usart_InitConfig &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[c2cdc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[c2ce3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[c2ceb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[c2cf2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinRemapConfig
<LI><a href="#[c2d0d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_Usart_InitConfig
<LI><a href="#[c2d10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_Usart_InitNVIC
<LI><a href="#[c2d8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_InterruptDriver_Initialize
<LI><a href="#[c2e5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_GpioOneInit
<LI><a href="#[c33ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[c3409c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c2d094]"></a>STM32_InitUsart5</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, stm32_usartinit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c2cdc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[c2ce3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[c2ceb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[c2cf2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinRemapConfig
<LI><a href="#[c2d0d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_Usart_InitConfig
<LI><a href="#[c2d10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_Usart_InitNVIC
<LI><a href="#[c2d8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_InterruptDriver_Initialize
<LI><a href="#[c2e5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_GpioOneInit
<LI><a href="#[c33ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>

<P><STRONG><a name="[c2d058]"></a>USART1_IRQHandler</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, stm32_usartinit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = USART1_IRQHandler &rArr; USART_RXComplete
</UL>
<BR>[Calls]<UL><LI><a href="#[c2ce00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[c2ce78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
<LI><a href="#[c2d79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_DataRegEmpty
<LI><a href="#[c2d814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_RXComplete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c2d01c]"></a>USART2_IRQHandler</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, stm32_usartinit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USART2_IRQHandler &rArr; USART2_DataRegEmpty
</UL>
<BR>[Calls]<UL><LI><a href="#[c2ce00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[c2ce78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
<LI><a href="#[c2d760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_DataRegEmpty
<LI><a href="#[c2d814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_RXComplete
<LI><a href="#[c34024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c2cfe0]"></a>USART3_IRQHandler</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, stm32_usartinit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USART3_IRQHandler &rArr; USART3_DataRegEmpty
</UL>
<BR>[Calls]<UL><LI><a href="#[c2ce00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[c2ce78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
<LI><a href="#[c2d724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_DataRegEmpty
<LI><a href="#[c2d814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_RXComplete
<LI><a href="#[c34024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c2cfa4]"></a>UART4_IRQHandler</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, stm32_usartinit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART4_IRQHandler &rArr; USART4_DataRegEmpty
</UL>
<BR>[Calls]<UL><LI><a href="#[c2ce00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[c2ce78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
<LI><a href="#[c2d6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART4_DataRegEmpty
<LI><a href="#[c2d814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_RXComplete
<LI><a href="#[c34024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c2cf68]"></a>UART5_IRQHandler</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, stm32_usartinit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UART5_IRQHandler &rArr; USART_RXComplete
</UL>
<BR>[Calls]<UL><LI><a href="#[c2ce00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[c2ce78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
<LI><a href="#[c2d6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART5_DataRegEmpty
<LI><a href="#[c2d814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_RXComplete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c33cdc]"></a>STM32_Tim2Init</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, stm32_timinit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = STM32_Tim2Init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c2c950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[c2c98c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[c2c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearFlag
<LI><a href="#[c2ceb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[c2cef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[c33b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[c3409c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c33ca0]"></a>STM32_Tim3Init</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, stm32_timinit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = STM32_Tim3Init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c2c950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[c2c98c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[c2c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearFlag
<LI><a href="#[c2ceb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[c2cef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[c33b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[c3409c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c33c64]"></a>STM32_Tim4Init</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, stm32_timinit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = STM32_Tim4Init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c2c950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[c2c98c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[c2c9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearFlag
<LI><a href="#[c2ceb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[c2cef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[c33b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[c3409c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c2e5ac]"></a>STM32_GpioOneInit</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, stm32_gpioinit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = STM32_GpioOneInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c3076c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c2d094]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart5
<LI><a href="#[c33d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart4
<LI><a href="#[c33d54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart3
<LI><a href="#[c33d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart2
<LI><a href="#[c33dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart1
<LI><a href="#[c33e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_GpioInit
<LI><a href="#[c33f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedDisp_Init
<LI><a href="#[c34060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc1Dma_Init
</UL>

<P><STRONG><a name="[c33e08]"></a>STM32_GpioInit</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, stm32_gpioinit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = STM32_GpioInit &rArr; STM32_GpioOneInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c2e5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_GpioOneInit
<LI><a href="#[c33ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[c3409c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c33ef8]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3409c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c2cef0]"></a>NVIC_Init</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, misc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c2d10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_Usart_InitNVIC
<LI><a href="#[c33c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_Tim4Init
<LI><a href="#[c33ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_Tim3Init
<LI><a href="#[c33cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_Tim2Init
</UL>

<P><STRONG><a name="[c2b780]"></a>NVIC_SetVectorTable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[c2b744]"></a>NVIC_SystemLPConfig</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[c2b708]"></a>SysTick_CLKSourceConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[c2b384]"></a>ADC_DeInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, stm32f10x_adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c2ad30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[c2e804]"></a>ADC_Init</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c34060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc1Dma_Init
</UL>

<P><STRONG><a name="[c2b348]"></a>ADC_StructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c2e8f4]"></a>ADC_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c34060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc1Dma_Init
</UL>

<P><STRONG><a name="[c2e8b8]"></a>ADC_DMACmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c34060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc1Dma_Init
</UL>

<P><STRONG><a name="[c2b30c]"></a>ADC_ITConfig</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c2e78c]"></a>ADC_ResetCalibration</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c34060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc1Dma_Init
</UL>

<P><STRONG><a name="[c2e840]"></a>ADC_GetResetCalibrationStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c34060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc1Dma_Init
</UL>

<P><STRONG><a name="[c2e714]"></a>ADC_StartCalibration</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c34060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc1Dma_Init
</UL>

<P><STRONG><a name="[c2e87c]"></a>ADC_GetCalibrationStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c34060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc1Dma_Init
</UL>

<P><STRONG><a name="[c2e750]"></a>ADC_SoftwareStartConvCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c34060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc1Dma_Init
</UL>

<P><STRONG><a name="[c2b2d0]"></a>ADC_GetSoftwareStartConvStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c2b294]"></a>ADC_DiscModeChannelCountConfig</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c2b258]"></a>ADC_DiscModeCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c2e7c8]"></a>ADC_RegularChannelConfig</STRONG> (Thumb, 180 bytes, Stack size 20 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ADC_RegularChannelConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[c34060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc1Dma_Init
</UL>

<P><STRONG><a name="[c2b21c]"></a>ADC_ExternalTrigConvCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c2b1e0]"></a>ADC_GetConversionValue</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c2b1a4]"></a>ADC_GetDualModeConversionValue</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c2b168]"></a>ADC_AutoInjectedConvCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c2b12c]"></a>ADC_InjectedDiscModeCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c2b0f0]"></a>ADC_ExternalTrigInjectedConvConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c2b0b4]"></a>ADC_ExternalTrigInjectedConvCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c2b078]"></a>ADC_SoftwareStartInjectedConvCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c2b03c]"></a>ADC_GetSoftwareStartInjectedConvCmdStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c2b000]"></a>ADC_InjectedChannelConfig</STRONG> (Thumb, 126 bytes, Stack size 20 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c2afc4]"></a>ADC_InjectedSequencerLengthConfig</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c2af88]"></a>ADC_SetInjectedOffset</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c2af4c]"></a>ADC_GetInjectedConversionValue</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c2af10]"></a>ADC_AnalogWatchdogCmd</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c2aed4]"></a>ADC_AnalogWatchdogThresholdsConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c2ae98]"></a>ADC_AnalogWatchdogSingleChannelConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c2ae5c]"></a>ADC_TempSensorVrefintCmd</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c2ae20]"></a>ADC_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c2ade4]"></a>ADC_ClearFlag</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c2ada8]"></a>ADC_GetITStatus</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c2ad6c]"></a>ADC_ClearITPendingBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c2e69c]"></a>DMA_DeInit</STRONG> (Thumb, 336 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c34060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc1Dma_Init
</UL>

<P><STRONG><a name="[c2e660]"></a>DMA_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f10x_dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c34060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc1Dma_Init
</UL>

<P><STRONG><a name="[c2a9ac]"></a>DMA_StructInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text), UNUSED)

<P><STRONG><a name="[c2e6d8]"></a>DMA_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c34060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc1Dma_Init
</UL>

<P><STRONG><a name="[c2a970]"></a>DMA_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text), UNUSED)

<P><STRONG><a name="[c2a934]"></a>DMA_SetCurrDataCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text), UNUSED)

<P><STRONG><a name="[c2a8f8]"></a>DMA_GetCurrDataCounter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text), UNUSED)

<P><STRONG><a name="[c2a8bc]"></a>DMA_GetFlagStatus</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text), UNUSED)

<P><STRONG><a name="[c2a880]"></a>DMA_ClearFlag</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text), UNUSED)

<P><STRONG><a name="[c2a844]"></a>DMA_GetITStatus</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text), UNUSED)

<P><STRONG><a name="[c2a808]"></a>DMA_ClearITPendingBit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text), UNUSED)

<P><STRONG><a name="[c2a484]"></a>GPIO_DeInit</STRONG> (Thumb, 172 bytes, Stack size 8 bytes, stm32f10x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c2ad30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[c2a448]"></a>GPIO_AFIODeInit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f10x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c2ad30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[c3076c]"></a>GPIO_Init</STRONG> (Thumb, 268 bytes, Stack size 20 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c2e5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_GpioOneInit
<LI><a href="#[c307e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyOneInit
</UL>

<P><STRONG><a name="[c2a40c]"></a>GPIO_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[c30730]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c307a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyOnePress_OpTask
</UL>

<P><STRONG><a name="[c2a3d0]"></a>GPIO_ReadInputData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[c2a394]"></a>GPIO_ReadOutputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[c2a358]"></a>GPIO_ReadOutputData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[c33fe8]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c2d6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART4_DataRegEmpty
<LI><a href="#[c2d724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_DataRegEmpty
<LI><a href="#[c2d760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_DataRegEmpty
<LI><a href="#[c3409c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c34024]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c2cfa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[c2cfe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[c2d01c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[c3409c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c2a31c]"></a>GPIO_WriteBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[c2a2e0]"></a>GPIO_Write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[c2a2a4]"></a>GPIO_PinLockConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[c2a268]"></a>GPIO_EventOutputConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[c2a22c]"></a>GPIO_EventOutputCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[c2cf2c]"></a>GPIO_PinRemapConfig</STRONG> (Thumb, 136 bytes, Stack size 20 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinRemapConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[c2d094]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart5
<LI><a href="#[c33d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart4
<LI><a href="#[c33d54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart3
<LI><a href="#[c33d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart2
<LI><a href="#[c33dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart1
</UL>

<P><STRONG><a name="[c2a1f0]"></a>GPIO_EXTILineConfig</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[c2a1b4]"></a>GPIO_ETH_MediaInterfaceConfig</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[c29d40]"></a>RCC_DeInit</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c29d04]"></a>RCC_HSEConfig</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c29cc8]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32f10x_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c29c8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
</UL>

<P><STRONG><a name="[c29c8c]"></a>RCC_WaitForHSEStartUp</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, stm32f10x_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c29cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
</UL>

<P><STRONG><a name="[c29c50]"></a>RCC_AdjustHSICalibrationValue</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c29c14]"></a>RCC_HSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c29bd8]"></a>RCC_PLLConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c29b9c]"></a>RCC_PLLCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c29b60]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c29b24]"></a>RCC_GetSYSCLKSource</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c29ae8]"></a>RCC_HCLKConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c33e80]"></a>RCC_PCLK1Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3409c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c33e44]"></a>RCC_PCLK2Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3409c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c29aac]"></a>RCC_ITConfig</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c29a70]"></a>RCC_USBCLKConfig</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c2e624]"></a>RCC_ADCCLKConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c34060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc1Dma_Init
</UL>

<P><STRONG><a name="[c29a34]"></a>RCC_LSEConfig</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c299f8]"></a>RCC_LSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c299bc]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c29980]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c29944]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 194 bytes, Stack size 12 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[c2cd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[c2e5e8]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c34060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc1Dma_Init
</UL>

<P><STRONG><a name="[c33ebc]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c2d094]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart5
<LI><a href="#[c33d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart4
<LI><a href="#[c33d54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart3
<LI><a href="#[c33d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart2
<LI><a href="#[c33dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart1
<LI><a href="#[c33e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_GpioInit
<LI><a href="#[c33f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedDisp_Init
<LI><a href="#[c33f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyRead_Init
<LI><a href="#[c34060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc1Dma_Init
<LI><a href="#[c3409c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c2ceb4]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c2d094]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart5
<LI><a href="#[c33c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_Tim4Init
<LI><a href="#[c33ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_Tim3Init
<LI><a href="#[c33cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_Tim2Init
<LI><a href="#[c33d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart4
<LI><a href="#[c33d54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart3
<LI><a href="#[c33d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart2
</UL>

<P><STRONG><a name="[c2ad30]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c29368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[c2a448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_AFIODeInit
<LI><a href="#[c2a484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DeInit
<LI><a href="#[c2b384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[16b0784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
</UL>

<P><STRONG><a name="[c2bb04]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c29368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[16b0784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
</UL>

<P><STRONG><a name="[c29908]"></a>RCC_BackupResetCmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c298cc]"></a>RCC_ClockSecuritySystemCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c29890]"></a>RCC_MCOConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c29854]"></a>RCC_ClearFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c29818]"></a>RCC_GetITStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c297dc]"></a>RCC_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c29368]"></a>TIM_DeInit</STRONG> (Thumb, 424 bytes, Stack size 8 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c2ad30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[c2bb04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>

<P><STRONG><a name="[c2c950]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c33c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_Tim4Init
<LI><a href="#[c33ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_Tim3Init
<LI><a href="#[c33cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_Tim2Init
</UL>

<P><STRONG><a name="[c2932c]"></a>TIM_OC1Init</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c292f0]"></a>TIM_OC2Init</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c292b4]"></a>TIM_OC3Init</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c29278]"></a>TIM_OC4Init</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c2923c]"></a>TIM_SetIC4Prescaler</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c2914c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[c29200]"></a>TIM_SetIC3Prescaler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c2914c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[c291c4]"></a>TIM_SetIC2Prescaler</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c29110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[c2914c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[c29188]"></a>TIM_SetIC1Prescaler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c29110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[c2914c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[c2914c]"></a>TIM_ICInit</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c29188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
<LI><a href="#[c291c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[c29200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC3Prescaler
<LI><a href="#[c2923c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC4Prescaler
<LI><a href="#[c29494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[c294d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
<LI><a href="#[c2950c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI3_Config
<LI><a href="#[c29548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI4_Config
</UL>

<P><STRONG><a name="[c29110]"></a>TIM_PWMIConfig</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c29188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
<LI><a href="#[c291c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[c29494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[c294d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>

<P><STRONG><a name="[c290d4]"></a>TIM_BDTRConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c29098]"></a>TIM_TimeBaseStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c2905c]"></a>TIM_OCStructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c29020]"></a>TIM_ICStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28fe4]"></a>TIM_BDTRStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c33b74]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c31c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
<LI><a href="#[c31cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[c31cfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[c33c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_Tim4Init
<LI><a href="#[c33ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_Tim3Init
<LI><a href="#[c33cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_Tim2Init
<LI><a href="#[c3409c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c28fa8]"></a>TIM_CtrlPWMOutputs</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c2c98c]"></a>TIM_ITConfig</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[c33c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_Tim4Init
<LI><a href="#[c33ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_Tim3Init
<LI><a href="#[c33cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_Tim2Init
</UL>

<P><STRONG><a name="[c28f6c]"></a>TIM_GenerateEvent</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28f30]"></a>TIM_DMAConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28ef4]"></a>TIM_DMACmd</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28eb8]"></a>TIM_InternalClockConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28e7c]"></a>TIM_SelectInputTrigger</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c28e04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[c28e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITRxExternalClockConfig
</UL>

<P><STRONG><a name="[c28e40]"></a>TIM_ITRxExternalClockConfig</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c28e7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectInputTrigger
</UL>

<P><STRONG><a name="[c28e04]"></a>TIM_TIxExternalClockConfig</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c28e7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectInputTrigger
<LI><a href="#[c29494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[c294d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>

<P><STRONG><a name="[c28dc8]"></a>TIM_ETRConfig</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c28d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRClockMode2Config
<LI><a href="#[c28d8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRClockMode1Config
</UL>

<P><STRONG><a name="[c28d8c]"></a>TIM_ETRClockMode1Config</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c28dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRConfig
</UL>

<P><STRONG><a name="[c28d50]"></a>TIM_ETRClockMode2Config</STRONG> (Thumb, 32 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c28dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRConfig
</UL>

<P><STRONG><a name="[c28d14]"></a>TIM_PrescalerConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28cd8]"></a>TIM_CounterModeConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28c9c]"></a>TIM_EncoderInterfaceConfig</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28c60]"></a>TIM_ForcedOC1Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28c24]"></a>TIM_ForcedOC2Config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28be8]"></a>TIM_ForcedOC3Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28bac]"></a>TIM_ForcedOC4Config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28b70]"></a>TIM_ARRPreloadConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28b34]"></a>TIM_SelectCOM</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28af8]"></a>TIM_SelectCCDMA</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28abc]"></a>TIM_CCPreloadControl</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28a80]"></a>TIM_OC1PreloadConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28a44]"></a>TIM_OC2PreloadConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28a08]"></a>TIM_OC3PreloadConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c289cc]"></a>TIM_OC4PreloadConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28990]"></a>TIM_OC1FastConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28954]"></a>TIM_OC2FastConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28918]"></a>TIM_OC3FastConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c288dc]"></a>TIM_OC4FastConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c288a0]"></a>TIM_ClearOC1Ref</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28864]"></a>TIM_ClearOC2Ref</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28828]"></a>TIM_ClearOC3Ref</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c287ec]"></a>TIM_ClearOC4Ref</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c287b0]"></a>TIM_OC1PolarityConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28774]"></a>TIM_OC1NPolarityConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28738]"></a>TIM_OC2PolarityConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c286fc]"></a>TIM_OC2NPolarityConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c286c0]"></a>TIM_OC3PolarityConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28684]"></a>TIM_OC3NPolarityConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28648]"></a>TIM_OC4PolarityConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c2860c]"></a>TIM_CCxCmd</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c285d0]"></a>TIM_CCxNCmd</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28594]"></a>TIM_SelectOCxM</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28558]"></a>TIM_UpdateDisableConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c2851c]"></a>TIM_UpdateRequestConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c284e0]"></a>TIM_SelectHallSensor</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c284a4]"></a>TIM_SelectOnePulseMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28468]"></a>TIM_SelectOutputTrigger</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c2842c]"></a>TIM_SelectSlaveMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c283f0]"></a>TIM_SelectMasterSlaveMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c283b4]"></a>TIM_SetCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28378]"></a>TIM_SetAutoreload</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c2833c]"></a>TIM_SetCompare1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28300]"></a>TIM_SetCompare2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c282c4]"></a>TIM_SetCompare3</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28288]"></a>TIM_SetCompare4</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c2824c]"></a>TIM_SetClockDivision</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28210]"></a>TIM_GetCapture1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c281d4]"></a>TIM_GetCapture2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28198]"></a>TIM_GetCapture3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c2815c]"></a>TIM_GetCapture4</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c28120]"></a>TIM_GetCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c280e4]"></a>TIM_GetPrescaler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c280a8]"></a>TIM_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c2c9c8]"></a>TIM_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c33c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_Tim4Init
<LI><a href="#[c33ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_Tim3Init
<LI><a href="#[c33cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_Tim2Init
</UL>

<P><STRONG><a name="[c31b1c]"></a>TIM_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[c31c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
<LI><a href="#[c31cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[c31cfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[c31b58]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c31c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
<LI><a href="#[c31cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[c31cfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[16b0784]"></a>USART_DeInit</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, stm32f10x_usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c2ad30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[c2bb04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>

<P><STRONG><a name="[c2cd88]"></a>USART_Init</STRONG> (Thumb, 210 bytes, Stack size 56 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[c29944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[c2d0d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_Usart_InitConfig
<LI><a href="#[c33dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart1
</UL>

<P><STRONG><a name="[c2cd4c]"></a>USART_StructInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c2d0d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_Usart_InitConfig
<LI><a href="#[c33dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart1
</UL>

<P><STRONG><a name="[16b0748]"></a>USART_ClockInit</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[16b070c]"></a>USART_ClockStructInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[c2ce3c]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c2d094]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart5
<LI><a href="#[c33d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart4
<LI><a href="#[c33d54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart3
<LI><a href="#[c33d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart2
<LI><a href="#[c33dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart1
</UL>

<P><STRONG><a name="[c2cdc4]"></a>USART_ITConfig</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[c2d094]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart5
<LI><a href="#[c33d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart4
<LI><a href="#[c33d54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart3
<LI><a href="#[c33d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart2
<LI><a href="#[c33dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_InitUsart1
</UL>

<P><STRONG><a name="[16b06d0]"></a>USART_DMACmd</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[16b0694]"></a>USART_SetAddress</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[16b0658]"></a>USART_WakeUpConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[16b061c]"></a>USART_ReceiverWakeUpCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[16b05e0]"></a>USART_LINBreakDetectLengthConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[16b05a4]"></a>USART_LINCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[16b0568]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[16b052c]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[16b04f0]"></a>USART_SendBreak</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[16b04b4]"></a>USART_SetGuardTime</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[16b0478]"></a>USART_SetPrescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[16b043c]"></a>USART_SmartCardCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[16b0400]"></a>USART_SmartCardNACKCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[16b03c4]"></a>USART_HalfDuplexCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[16b0388]"></a>USART_OverSampling8Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[16b034c]"></a>USART_OneBitMethodCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[16b0310]"></a>USART_IrDAConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[16b02d4]"></a>USART_IrDACmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[16b0298]"></a>USART_GetFlagStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[16b025c]"></a>USART_ClearFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[c2ce00]"></a>USART_GetITStatus</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[c2cf68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
<LI><a href="#[c2cfa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[c2cfe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[c2d01c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[c2d058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[c2ce78]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[c2cf68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
<LI><a href="#[c2cfa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[c2cfe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[c2d01c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[c2d058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[c33bb0]"></a>SystemInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, system_stm32f10x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[16af9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[c3409c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(.text)
</UL>
<P><STRONG><a name="[16af794]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, system_stm32f10x.o(.text), UNUSED)

<P><STRONG><a name="[16af35c]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16af104]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16af104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[16af104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16af0c8]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16af08c]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16af050]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16af014]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16aefd8]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16aef9c]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16aef60]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16aef24]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16aeee8]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16aeeac]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16aee70]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16aee34]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16aedf8]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16aedbc]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16aed80]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16aed44]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16aed08]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16aeccc]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16aec90]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16aec54]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16aec18]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16aebdc]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16aeba0]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16aeb64]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16aeb28]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16aeaec]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16aeab0]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16aea74]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16aea38]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16ae9fc]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16ae9c0]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16ae984]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16ae948]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16ae90c]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16ae8d0]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16ae894]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16ae858]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16ae81c]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16ae7e0]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16ae7a4]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16ae6b4]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16ae678]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16ae63c]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16ae600]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16ae5c4]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16ae588]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16ae54c]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16ae3e4]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16ae3a8]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16ae36c]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16ae330]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16af488]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f10x_hd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16a7f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[16add90]"></a>malloc</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, h1_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16abbd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
<LI><a href="#[16abea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[c2ef84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;insertBefore
<LI><a href="#[c2efc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;insertAfter
<LI><a href="#[c2f614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;creatChain
</UL>

<P><STRONG><a name="[16adc28]"></a>free</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, h1_free.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = free
</UL>
<BR>[Calls]<UL><LI><a href="#[16abea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[c2ee94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deleteChain
<LI><a href="#[c2eed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deletSelf
<LI><a href="#[c2ef0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deleteBefore
<LI><a href="#[c2ef48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deleteAfter
<LI><a href="#[16a8840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>

<P><STRONG><a name="[16ac5e4]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[16ac5a8]"></a>__rt_heap_escrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[16ac56c]"></a>__rt_heap_expand</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[16abea0]"></a>__rt_heap_descriptor</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rt_heap_descriptor_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16abb58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[16adc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[16add90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[16abd74]"></a>__use_no_heap</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[16abd38]"></a>__heap$guard</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[16abc48]"></a>_terminate_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[16abc0c]"></a>_init_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[16abbd0]"></a>__Heap_Full</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16a8840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[16add90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[16abb94]"></a>__Heap_Broken</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16a8624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[16abb58]"></a>_init_alloc</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[16a8624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[16a8840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
<LI><a href="#[16ab75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
<LI><a href="#[16abea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[16aa4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_heap_2
</UL>

<P><STRONG><a name="[16ab75c]"></a>__Heap_Initialize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, h1_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16abb58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[16ab720]"></a>__Heap_DescSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, h1_init.o(.text), UNUSED)

<P><STRONG><a name="[16a93bc]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[16a9380]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16a7f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[16a9344]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[16a8840]"></a>__Heap_ProvideMemory</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, h1_extend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[16adc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[16abb58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[16abbd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[16a8624]"></a>__rt_SIGRTMEM</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_rtmem_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[16a78c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[16a79b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[16abb58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[16abb94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Broken
</UL>

<P><STRONG><a name="[16a8084]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sys_exit.o(.text)
</UL>
<P><STRONG><a name="[16a8048]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[16a7f58]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[16a9380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[16af488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[16a8d2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[16a7b20]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16a6c98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[16a8f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[16a79b8]"></a>__sig_exit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, defsig_exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16a6d4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[16a8624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[16a78c8]"></a>__rt_SIGRTMEM_inner</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, defsig_rtmem_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[16a67ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[16a8624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[16a6d4c]"></a>_sys_exit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16a5ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
<LI><a href="#[16a79b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>

<P><STRONG><a name="[16a67ac]"></a>__default_signal_display</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, defsig_general.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[16a5ce4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[16a78c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
</UL>

<P><STRONG><a name="[16a5ce4]"></a>_ttywrch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sys_wrch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[16a67ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[c30280]"></a>AdcToOmapData</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, cbctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = AdcToOmapData &rArr; BAT2_GetValue &rArr; GetAdcAverageValue
</UL>
<BR>[Calls]<UL><LI><a href="#[c30d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JK_GetValue
<LI><a href="#[c31540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAdcAverageValue
<LI><a href="#[c315b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT2_GetValue
<LI><a href="#[c315f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT1_GetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[c31c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CbDealTxdCtrl
</UL>

<P><STRONG><a name="[c30244]"></a>KeyIJGToOmapData</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, cbctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c300dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyToOmapData
</UL>

<P><STRONG><a name="[c30208]"></a>KeyHMToOmapData</STRONG> (Thumb, 182 bytes, Stack size 0 bytes, cbctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c300dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyToOmapData
</UL>

<P><STRONG><a name="[c301cc]"></a>KeyFToOmapData</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, cbctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c300dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyToOmapData
</UL>

<P><STRONG><a name="[c30190]"></a>KeyEToOmapData</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, cbctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c300dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyToOmapData
</UL>

<P><STRONG><a name="[c30154]"></a>KeyBToOmapData</STRONG> (Thumb, 182 bytes, Stack size 0 bytes, cbctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c300dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyToOmapData
</UL>

<P><STRONG><a name="[c30118]"></a>KeyAToOmapData</STRONG> (Thumb, 208 bytes, Stack size 0 bytes, cbctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c300dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyToOmapData
</UL>

<P><STRONG><a name="[c300dc]"></a>KeyToOmapData</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, cbctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = KeyToOmapData
</UL>
<BR>[Calls]<UL><LI><a href="#[c30118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyAToOmapData
<LI><a href="#[c30154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyBToOmapData
<LI><a href="#[c30190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEToOmapData
<LI><a href="#[c301cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyFToOmapData
<LI><a href="#[c30208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyHMToOmapData
<LI><a href="#[c30244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIJGToOmapData
</UL>
<BR>[Called By]<UL><LI><a href="#[c31c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CbDealTxdCtrl
</UL>

<P><STRONG><a name="[c29548]"></a>TI4_Config</STRONG> (Thumb, 114 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c2914c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[c2950c]"></a>TI3_Config</STRONG> (Thumb, 110 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c2914c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[c294d0]"></a>TI2_Config</STRONG> (Thumb, 114 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c28e04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[c29110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[c2914c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[c29494]"></a>TI1_Config</STRONG> (Thumb, 102 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c28e04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[c29110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[c2914c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[16afa28]"></a>SetSysClockTo72</STRONG> (Thumb, 192 bytes, Stack size 0 bytes, system_stm32f10x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16af9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[16af9ec]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_stm32f10x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[16afa28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[c33bb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
